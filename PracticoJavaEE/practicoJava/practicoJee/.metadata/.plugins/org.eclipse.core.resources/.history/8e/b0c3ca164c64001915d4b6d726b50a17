package com.practico.entyties;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;

import javax.persistence.*;

import com.practico.datatype.NoticiaDataType;
import com.practico.datatype.PublicacionDataType;

/**
 * Entity implementation class for Entity: Publicacion
 *
 */
@Entity
@NamedQueries({
@NamedQuery(name="Publicacion.getAll", query="SELECT p FROM Publicacion p"),
@NamedQuery(name="Publicacion.getById", query="SELECT p FROM Publicacion p WHERE p.id = :id")
})
public class Publicacion implements Serializable {

	
	@Id
	@GeneratedValue(strategy=GenerationType.SEQUENCE)
	@Column(name="IDT_PUBLICACION")
	private long id;
	
	@Column(name="TIPO")
	private String tipo;
	
	@Column(name="URL")
	private String url;
	
	@ManyToOne
	private Noticia noticia;

	public Publicacion() {
		super();
	}

	public long getId() {
		return id;
	}

	public void setId(long id) {
		this.id = id;
	}

	public String getTipo() {
		return tipo;
	}

	public void setTipo(String tipo) {
		this.tipo = tipo;
	}

	public String getUrl() {
		return url;
	}

	public void setUrl(String url) {
		this.url = url;
	}

	public Noticia getNoticia() {
		return noticia;
	}

	public void setNoticia(Noticia noticia) {
		this.noticia = noticia;
	}

	@Override
	public String toString() {
		return "Publicacion [id=" + id + ", tipo=" + tipo + ", url=" + url + ", noticia=" + noticia + "]";
	}
	
	
	public PublicacionDataType toDataType() {
				
		
		List <PublicacionDataType> dtPub = new ArrayList<PublicacionDataType>();
       
        noticia.getPublicaciones().forEach(pub -> {
        	
        	dtPub.add(new PublicacionDataType(Long.toString(pub.getId()), pub.getTipo(), pub.getUrl(), pub.getNoticia().toDataType()));
        });
        
        NoticiaDataType not = new NoticiaDataType(Long.toString(noticia.getId()), noticia.getTitulo(), noticia.getDescripcion(), dtPub);
        
        PublicacionDataType dtPublicacion = new PublicacionDataType(Long.toString(id), tipo, url, not);

        return dtPublicacion;
    }
	
   
}
